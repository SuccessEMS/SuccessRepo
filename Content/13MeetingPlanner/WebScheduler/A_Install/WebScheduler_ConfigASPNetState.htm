<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" xml:lang="en-us" class="topic" MadCap:lastBlockDepth="4" MadCap:lastHeight="2210" MadCap:lastWidth="887">
    <head><title></title>
        <link href="../../../Resources/Stylesheets/WebScheduler_ConfigureASPStateServer.css" rel="stylesheet" />
    </head>
    <body>
        <h1>Configure ASP.NET State for Load Balanced Environments</h1>
        <h2>Introduction&#160;</h2>
        <p>Larger organizations may be looking to host the Web Scheduler on multiple servers in order to distribute network traffic and enhance performance. The general setup in these cases would consist of a piece of hardware (or software in some cases) that acts as the load balancer. This tool will provide a unified front for multiple servers, allowing users to connect through itself and be routed to one of the web servers.&#160;The web servers will all have the Web Scheduler installed on them, but will need to save each user's session information on the same server, the "State Server". This allows the user's session information to always be available as the load balancer routes the user to a different server.</p>
        <p>Below, you will find the steps needed to properly configure the Web Scheduler in this setup. &#160;</p>
        <p>Note:&#160;Web Scheduler v1.8.2.0 or above is required.</p>
        <p>Configuration&#160;</p>
        <p>State Server Setup (Inbound Ports Required: 80 &amp; 42424)&#160;</p>
        <p>Below are the configuration steps for the server that will be designated to hold all of the session state information for all users</p>
        <p>Generate a new machine key&#160;</p>
        <ol start="1" class="ol_1">
            <li>Perform a web search for "machine key generator"</li>
            <li>Click on one of the first few links (ie&#160;<a href="http://aspnetresources.com/tools/machineKey">http://aspnetresources.com/tools/machineKey</a>)</li>
            <li>Generate a new machine key (this will be used shortly)</li>
        </ol>
        <p>Update the Web Scheduler Web web.config&#160;<a href="https://success.emssoftware.com/Older_Releases_(V44,_V43)/MeetingPlanner/30-Meeting_Planner_Web_Scheduler/Installing_Web_Scheduler_-_(and_other_technical_documentation)/Configure_ASP.NET_State_Server_for_Load_Balanced_Environments/Configure_ASP.NET_State_for_Load_Balanced_Environments" title="Edit section" class="a_1"><img src="../../../Resources/Images/WebScheduler_ConfigureASPStateServer/Configure ASP NET State for.gif" alt="Edit section" class="img_1" /></a></p>
        <ol start="1" class="ol_1">
            <li>Open C:\Program Files\Emergingsoft\Scheduler\web.config</li>
            <li>Add a &lt;sessionState&gt; element within &lt;system.web&gt;&#160;as seen below</li>
            <li>Save and close (example below)</li>
        </ol>
        <ol start="1" class="ol_1">
            <li>&lt;?xml version="1.0" encoding="UTF-8"?&gt;</li>
        </ol>
        <p>&lt;configuration&gt;</p>
        <p>&lt;appSettings&gt;</p>
        <p>...</p>
        <p>&lt;/appSettings&gt;</p>
        <p>&lt;system.web&gt;</p>
        <p>...</p>
        <p>&lt;sessionState mode="StateServer" stateConnectionString="tcpip=127.0.0.1:42424" /&gt;</p>
        <p>...</p>
        <p>&lt;/system.web&gt;</p>
        <p>&lt;/configuration&gt;</p>
        <p>Modify the registry&#160;</p>
        <ol start="1" class="ol_1">
            <li>Open regedit</li>
            <li>Navigate to the following key: HKLM\System\Current Control Set\Services\aspnet_state\Parameters\AllowRemoteConnection</li>
            <li>Set this value to 1</li>
            <li>Close regedit</li>
        </ol>
        <p>Start the ASP.NET State Service&#160;</p>
        <ol start="1" class="ol_1">
            <li>Open Start &gt; Administrative Tools &gt; Services</li>
            <li>Right-click the ASP.NET State Service (if the service doesn't exist you will need to run the 'aspnet_regiis.exe -i' command)</li>
            <li>Select "Automatic" startup type</li>
            <li>Click Apply</li>
            <li>Start the service</li>
            <li>Click OK</li>
        </ol>
        <p>Web Server(s) Setup (Outbound Ports Required: 80 &amp; 42424)&#160;</p>
        <p>Below are the configuration steps for all of the web servers that will run MeetingPlanner, but will not hold session state information</p>
        <p>Update the Web Scheduler Web web.config&#160;</p>
        <ol start="1" class="ol_1">
            <li>Open C:\Program Files\Emergingsoft\Scheduler\web.config</li>
            <li>Add a &lt;sessionState&gt; element&#160;within &lt;system.web&gt;&#160;as seen below (note the stateConnectionString)</li>
            <li>Save and close (example below)&#160;</li>
        </ol>
        <p>&lt;?xml version="1.0" encoding="UTF-8"?&gt;</p>
        <p>&lt;configuration&gt;</p>
        <p>&lt;appSettings&gt;</p>
        <p>...</p>
        <p>&lt;/appSettings&gt;</p>
        <p>&lt;system.web&gt;</p>
        <p>...</p>
        <p>&lt;sessionState mode="StateServer" stateConnectionString="mystateserver.emergingsoft.com:42424" ... /&gt;</p>
        <p>...</p>
        <p>&lt;/system.web&gt;</p>
        <p>&lt;/configuration&gt;</p>
        <p>Validate the configuration&#160;</p>
        <p>In order to test this functionality, you will want to access the Web Scheduler at each of the web servers, from your local desktop.&#160;Make sure that you bypass your load balancing system and access the Web Scheduler&#160;directly on each server (<a href="http://mystateserver.emergingsoft.com/meetingplanner">http://mystateserver.emergingsoft.com/scheduler</a>,&#160;<a href="http://mywebserver1.emergingsoft.com/meetingplanner...">http://mywebserver1.emergingsoft.com/scheduler...</a>).&#160;</p>
        <p>&#160;</p>
    </body>
</html>